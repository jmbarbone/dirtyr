# Generated by roxygen2: do not edit by hand

S3method(any_nin,data.frame)
S3method(any_nin,default)
S3method(count_na,data.frame)
S3method(count_na,default)
S3method(get_na,data.frame)
S3method(get_na,data.table)
S3method(get_na_inf,data.frame)
S3method(is_false,default)
S3method(is_false,logical)
S3method(is_na,default)
S3method(is_na,logical)
S3method(is_true,default)
S3method(is_true,logical)
S3method(maybe_integer,default)
S3method(maybe_integer,factor)
S3method(maybe_integer,integer)
S3method(maybe_integer,numeric)
S3method(maybe_numeric,default)
S3method(maybe_numeric,factor)
S3method(qc,Date)
S3method(qc,POSIXct)
S3method(qc,character)
S3method(qc,default)
S3method(qc,factor)
S3method(qc,integer)
S3method(qc,logical)
S3method(qc,numeric)
S3method(qc,ordered)
S3method(reindex,data.frame)
S3method(reindex,default)
S3method(remove_names,data.frame)
S3method(remove_names,default)
S3method(remove_names,matrix)
S3method(reverse,data.frame)
S3method(reverse,default)
S3method(reverse,matrix)
S3method(to_numeric,default)
S3method(to_numeric,factor)
export("%>%")
export("%out%")
export("%wi%")
export("%wo%")
export(all_false)
export(all_false_x)
export(all_na)
export(all_true)
export(all_true_x)
export(any_false)
export(any_false_x)
export(any_na)
export(any_nin)
export(any_true)
export(any_true_x)
export(count_na)
export(earliest_date)
export(expand_factor_seq)
export(get_na)
export(get_na_inf)
export(is_false)
export(is_na)
export(is_na_inf)
export(is_nin)
export(is_true)
export(keep_na)
export(keep_nin)
export(latest_date)
export(maybe_integer)
export(maybe_numeric)
export(no_match)
export(parse_date)
export(qc)
export(qc_data_frame)
export(reindex)
export(remove_names)
export(reverse)
export(split_date)
export(to_boolean)
export(to_numeric)
export(unknown_date)
export(which_min_na)
export(which_na)
export(which_na_inf)
export(which_nin)
importFrom(R6,R6Class)
importFrom(dplyr,any_vars)
importFrom(dplyr,filter_all)
importFrom(dplyr,filter_at)
importFrom(dplyr,vars)
importFrom(magrittr,"%>%")
importFrom(rlang,enquos)
importFrom(stats,complete.cases)
importFrom(stats,setNames)
importFrom(tibble,as_tibble)
