% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boolean-ops.R
\name{boolean_ops}
\alias{boolean_ops}
\alias{is_true}
\alias{is_false}
\alias{is_na}
\alias{any_na}
\alias{all_na}
\alias{any_true}
\alias{any_true_x}
\alias{any_false}
\alias{any_false_x}
\alias{all_true}
\alias{all_true_x}
\alias{all_false}
\alias{all_false_x}
\title{Boolean Operators}
\usage{
is_true(x, ...)

is_false(x, ...)

is_na(x, ...)

any_na(x)

all_na(x, ...)

any_true(x)

any_true_x(x)

any_false(x)

any_false_x(x)

all_true(x)

all_true_x(x)

all_false(x)

all_false_x(x)
}
\arguments{
\item{x}{A vector of logical values}

\item{...}{Additional arguments sent to methods (not used)}
}
\value{
Either a vector of logical values or a single logical values (see details).
}
\description{
These provide better logical operators for catching TRUE and FALSE statements in the presence of
`NA` values.
These return `NA` values as `FALSE` and thus no `na.rm` argument is not necessary.
}
\details{
The functions [is_true()] and [is_false()] are vectorized and will return a logical vector of the
  same length as the input `x` denoting whether or not the values are `TRUE` or `FALSE`,
  respectively.
The `all_*()` and `any_*()` functions apply the vectorized functions and return values of `TRUE`
  or `FALSE`.

Specialized `any_*_x()` and `all_*_x()` apply exclusivity to the evaluations.
These will return `NA` is all the values are `NA` to designate an incompatibility of values.
This is useful for when you do not want to apply an evaluation in the _absence_ of data.
}
\examples{
x <- c(TRUE, NA, FALSE)
is_true(x)     ##  TRUE FALSE FALSE
is_false(x)    ## FALSE FALSE  TRUE
all_true(x)    ## FALSE
all_true(NA)   ## FALSE
all_true_x(NA) ## NA
any_true_x(x)  ## TRUE
any_true_x(NA) ## NA
}
